services:
  mysql:
    image: mysql:8.0
    container_name: hackacode-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: "admin"   # Cambia este valor por el de tu elección
      # Opcional: puedes definir una base de datos inicial
      # MYSQL_DATABASE: "base_inicial"
    ports:
      - "3306:3306"
    volumes:
      - ./mysql/init:/docker-entrypoint-initdb.d
      # Dentro de ./mysql/init coloca un archivo (por ejemplo, init.sql) con:
      #   CREATE DATABASE IF NOT EXISTS consultation_db;
      #   CREATE DATABASE IF NOT EXISTS doctor_db;
      #   CREATE DATABASE IF NOT EXISTS medical_service_db;
      #   CREATE DATABASE IF NOT EXISTS patient_db;
      #   CREATE DATABASE IF NOT EXISTS payment_db;
      #   CREATE DATABASE IF NOT EXISTS person_db;
    networks:
      - hackacode

  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    environment:
      ISSUER_URI: "http://dev-rf6iib6ciw3jlk0l.us.auth0.com/"
    expose:
      - "443"   # Puerto de exposición interno
    volumes:
      - ${GATEWAY_DIR}:/app/app.jar
    networks:
      - hackacode
    # Si api-gateway no requiere conexión directa a MySQL, no se incluye depends_on

  apollo-federation-gateway:
    build: ./apollo-federation-gateway
    container_name: apollo-federation-gateway
    networks:
      - hackacode

  eureka-sv:
    build: ./eureka-sv
    container_name: eureka-sv
    expose:
      - "8761"
    volumes:
      - ${EUREKA_DIR}:/app/app.jar
    networks:
      - hackacode

  consultation-sv:
    build: ./consultation-sv
    container_name: consultation-sv
    environment:
      DB_USER: "root"
      DB_PASSWORD: "admin"
      DB_URL: "hackacode-db:3306"             # Nombre del servicio MySQL
      DB_NAME: "consultation_db"  # Nombre de la base de datos para este servicio
      EUREKA_URL: "eureka-sv:8761"
    volumes:
      - ${CONSULTATION_DIR}:/app/app.jar
    networks:
      - hackacode
    depends_on:
      - hackacode-db

  doctor-sv:
    build: ./doctor-sv
    container_name: doctor-sv
    environment:
      DB_USER: "root"
      DB_PASSWORD: "admin"
      DB_URL: "hackacode-db:3306"
      DB_NAME: "doctor_db"
      EUREKA_URL: "eureka-sv:8761"
    volumes:
      - ${DOCTOR_DIR}:/app/app.jar
    networks:
      - hackacode
    depends_on:
      - hackacode-db

  medical-service-sv:
    build: ./medical-service-sv
    container_name: medical-service-sv
    environment:
      DB_USER: "root"
      DB_PASSWORD: "admin"
      DB_URL: "hackacode-db:3306"
      DB_NAME: "medical_service_db"
      EUREKA_URL: "eureka-sv:8761"
    volumes:
      - ${MEDICAL_DIR}:/app/app.jar
    networks:
      - hackacode
    depends_on:
      - hackacode-db

  patient-sv:
    build: ./patient-sv
    container_name: patient-sv
    environment:
      DB_USER: "root"
      DB_PASSWORD: "admin"
      DB_URL: "hackacode-db:3306"
      DB_NAME: "patient_db"
      EUREKA_URL: "eureka-sv:8761"
    volumes:
      - ${PATIENT_DIR}:/app/app.jar
    networks:
      - hackacode
    depends_on:
      - hackacode-sb

  payment-sv:
    build: ./payment-sv
    container_name: payment-sv
    environment:
      DB_USER: "root"
      DB_PASSWORD: "admin"
      DB_URL: "hackacode-db:3306"
      DB_NAME: "payment_db"
      EUREKA_URL: "eureka-sv:8761"
    volumes:
      - ${PAYMENT_DIR}:/app/app.jar
    networks:
      - hackacode
    depends_on:
      - hackacode-db

  person-sv:
    build: ./person-sv
    container_name: person-sv
    environment:
      DB_USER: "root"
      DB_PASSWORD: "admin"
      DB_URL: "hackacode-db:3306"
      DB_NAME: "person_db"
      EUREKA_URL: "eureka-sv:8761"
    volumes:
      - ${PERSON_DIR}:/app/app.jar
    networks:
      - hackacode
    depends_on:
      - hackacode-db

networks:
  hackacode:
    driver: bridge
